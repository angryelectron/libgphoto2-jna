/**
 * Copyright 2012 Andrew Bythell, abythell@ieee.org
 *
 * This file is part of libgphoto2-jna.
 *
 * libgphoto2-jna is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * libgphoto2-jna is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * libphoto2-jna. If not, see <http://www.gnu.org/licenses/>.
 */
package com.angryelectron.libgphoto2;
import java.util.Arrays;
import java.util.List;

import com.angryelectron.libgphoto2.Gphoto2Library.time_t;
import com.sun.jna.NativeLong;
import com.sun.jna.Structure;
/**
 * <i>native declaration : /usr/include/gphoto2/gphoto2-filesys.h:867</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class CameraFileInfoFile extends Structure {
	/**
	 * @see CameraFileInfoFields<br>
	 * < \brief Bitmask containing the set members.<br>
	 * C type : CameraFileInfoFields
	 */
	public int fields;
	/**
	 * @see CameraFileStatus<br>
	 * < \brief Status of the file.<br>
	 * C type : CameraFileStatus
	 */
	public int status;
	/// < \brief Size of the file.
	public NativeLong size;
	/**
	 * < \brief MIME type of the file.<br>
	 * C type : char[64]
	 */
	public byte[] type = new byte[64];
	/// < \brief Height of the file.
	public int width;
	/// < \brief Width of the file.
	public int height;
	/**
	 * < \brief Filename of the file.<br>
	 * C type : char[64]
	 */
	public byte[] name = new byte[64];
	/**
	 * @see CameraFilePermissions<br>
	 * < \brief Permissions of the file.<br>
	 * C type : CameraFilePermissions
	 */
	public int permissions;
	/**
	 * < \brief Modification time of the file.<br>
	 * C type : time_t
	 */
	public time_t mtime;
	public CameraFileInfoFile() {
		super();
	}
	@SuppressWarnings("rawtypes")
  @Override
  protected List getFieldOrder() {
	  // TODO Auto-generated method stub
	  return Arrays.asList(new String[]{"fields", "status", "size", "type", "width", "height", "name", "permissions", "mtime"});
  };

	/**
	 * @param fields @see CameraFileInfoFields<br>
	 * < \brief Bitmask containing the set members.<br>
	 * C type : CameraFileInfoFields<br>
	 * @param status @see CameraFileStatus<br>
	 * < \brief Status of the file.<br>
	 * C type : CameraFileStatus<br>
	 * @param size < \brief Size of the file.<br>
	 * @param type < \brief MIME type of the file.<br>
	 * C type : char[64]<br>
	 * @param width < \brief Height of the file.<br>
	 * @param height < \brief Width of the file.<br>
	 * @param name < \brief Filename of the file.<br>
	 * C type : char[64]<br>
	 * @param permissions @see CameraFilePermissions<br>
	 * < \brief Permissions of the file.<br>
	 * C type : CameraFilePermissions<br>
	 * @param mtime < \brief Modification time of the file.<br>
	 * C type : time_t
	 */
	public CameraFileInfoFile(int fields, int status, NativeLong size, byte type[], int width, int height, byte name[], int permissions, time_t mtime) {
		super();
		this.fields = fields;
		this.status = status;
		this.size = size;
		if (type.length != this.type.length) 
			throw new IllegalArgumentException("Wrong array size !");
		this.type = type;
		this.width = width;
		this.height = height;
		if (name.length != this.name.length) 
			throw new IllegalArgumentException("Wrong array size !");
		this.name = name;
		this.permissions = permissions;
		this.mtime = mtime;
	}
	public static class ByReference extends CameraFileInfoFile implements Structure.ByReference {
		
	};
	public static class ByValue extends CameraFileInfoFile implements Structure.ByValue {
		
	};
}
