/**
 * Copyright 2012 Andrew Bythell, abythell@ieee.org
 *
 * This file is part of libgphoto2-jna.
 *
 * libgphoto2-jna is free software: you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option) any later
 * version.
 *
 * libgphoto2-jna is distributed in the hope that it will be useful, but WITHOUT ANY
 * WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
 * A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along with
 * libphoto2-jna. If not, see <http://www.gnu.org/licenses/>.
 */
package com.angryelectron.libgphoto2;
import java.util.Arrays;
import java.util.List;

import com.angryelectron.libgphoto2.Gphoto2Library.GPPortPrivateCore;
import com.angryelectron.libgphoto2.Gphoto2Library.GPPortPrivateLibrary;
import com.sun.jna.Structure;
/**
 * <i>native declaration : /usr/include/gphoto2/gphoto2-port.h:139</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class GPPort extends Structure {
	/**
	 * For your convenience<br>
	 * @see GPPortType<br>
	 * < \brief Actual type of this port<br>
	 * C type : GPPortType
	 */
	public int type;
	/**
	 * < \brief Current port settings.<br>
	 * C type : GPPortSettings
	 */
	public GPPortSettings settings;
	/**
	 * < \brief Settings to be committed.<br>
	 * C type : GPPortSettings
	 */
	public GPPortSettings settings_pending;
	/// < \brief Port timeout in milliseconds.
	public int timeout;
	/**
	 * < \brief Camera driver private data pointer.<br>
	 * C type : GPPortPrivateLibrary*
	 */
	public GPPortPrivateLibrary pl;
	/**
	 * < \brief Port library private data pointer.<br>
	 * C type : GPPortPrivateCore*
	 */
	public GPPortPrivateCore pc;
	public GPPort() {
		super();
	}
	@SuppressWarnings("rawtypes")
  @Override
  protected List getFieldOrder() {
	  return Arrays.asList(new String[]{"type", "settings", "settings_pending", "timeout", "pl", "pc"});
  };

	/**
	 * @param type For your convenience<br>
	 * @see GPPortType<br>
	 * < \brief Actual type of this port<br>
	 * C type : GPPortType<br>
	 * @param settings < \brief Current port settings.<br>
	 * C type : GPPortSettings<br>
	 * @param settings_pending < \brief Settings to be committed.<br>
	 * C type : GPPortSettings<br>
	 * @param timeout < \brief Port timeout in milliseconds.<br>
	 * @param pl < \brief Camera driver private data pointer.<br>
	 * C type : GPPortPrivateLibrary*<br>
	 * @param pc < \brief Port library private data pointer.<br>
	 * C type : GPPortPrivateCore*
	 */
	public GPPort(int type, GPPortSettings settings, GPPortSettings settings_pending, int timeout, GPPortPrivateLibrary pl, GPPortPrivateCore pc) {
		super();
		this.type = type;
		this.settings = settings;
		this.settings_pending = settings_pending;
		this.timeout = timeout;
		this.pl = pl;
		this.pc = pc;
	}
	public static class ByReference extends GPPort implements Structure.ByReference {
		
	};
	public static class ByValue extends GPPort implements Structure.ByValue {
		
	};
}
